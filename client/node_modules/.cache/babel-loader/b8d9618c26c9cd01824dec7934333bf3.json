{"ast":null,"code":"import fitnessService from '../services/FitnessService';\nexport const signIn = userId => {\n  return {\n    type: 'SIGN_IN',\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: 'SIGN_OUT'\n  };\n};\nexport const PersistBMIData = (bmi, gender, goal) => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await fitnessService.post('/users', {\n      bmi,\n      userId,\n      gender,\n      goal\n    });\n    dispatch({\n      type: 'PERSIST_BMI',\n      payload: response.data\n    });\n  };\n};\nexport const FetchBMIData = () => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await fitnessService.get(\"/users?userId=\".concat(userId));\n\n    if (response.data.length) {\n      dispatch({\n        type: 'FETCH_BMI',\n        payload: response.data\n      });\n    }\n  };\n};\n\nconst calculateObesity = bmi => {\n  if (bmi < 18.5) {\n    return 'underweight';\n  } else if (bmi >= 18.5 && bmi <= 24.9) {\n    return 'healthyweight';\n  } else if (bmi >= 25 && bmi <= 29.9) {\n    return 'overweight';\n  } else if (bmi >= 30) {\n    return 'obese';\n  }\n};\n\nexport const FetchWorkoutData = () => {\n  return async (dispatch, getState) => {\n    const _getState$user = getState().user,\n          bmi = _getState$user.bmi,\n          gender = _getState$user.gender,\n          goal = _getState$user.goal;\n    const response = await fitnessService.get('/workouts');\n    const obesity = calculateObesity(bmi);\n    console.log(response.data[gender][obesity]);\n  };\n};","map":{"version":3,"sources":["/Users/nibanerjee/Desktop/fitness-app/client/src/actions/index.js"],"names":["fitnessService","signIn","userId","type","payload","signOut","PersistBMIData","bmi","gender","goal","dispatch","getState","auth","response","post","data","FetchBMIData","get","length","calculateObesity","FetchWorkoutData","user","obesity","console","log"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAG,SADJ;AAEHC,IAAAA,OAAO,EAAGF;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAG;AADJ,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMG,cAAc,GAAG,CAACC,GAAD,EAAKC,MAAL,EAAYC,IAAZ,KAAqB;AAChD,SAAO,OAAOC,QAAP,EAAgBC,QAAhB,KAA6B;AAAA,UACxBT,MADwB,GACdS,QAAQ,GAAGC,IADG,CACxBV,MADwB;AAE/B,UAAMW,QAAQ,GAAG,MAAMb,cAAc,CAACc,IAAf,CAAoB,QAApB,EAA6B;AAACP,MAAAA,GAAD;AAAKL,MAAAA,MAAL;AAAYM,MAAAA,MAAZ;AAAmBC,MAAAA;AAAnB,KAA7B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAG,aADF;AAELC,MAAAA,OAAO,EAAGS,QAAQ,CAACE;AAFd,KAAD,CAAR;AAIJ,GAPD;AAQF,CATM;AAWP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,OAAON,QAAP,EAAgBC,QAAhB,KAA6B;AAAA,UACzBT,MADyB,GACfS,QAAQ,GAAGC,IADI,CACzBV,MADyB;AAEhC,UAAMW,QAAQ,GAAG,MAAMb,cAAc,CAACiB,GAAf,yBAAoCf,MAApC,EAAvB;;AACA,QAAGW,QAAQ,CAACE,IAAT,CAAcG,MAAjB,EAAwB;AACpBR,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAG,WADF;AAELC,QAAAA,OAAO,EAAGS,QAAQ,CAACE;AAFd,OAAD,CAAR;AAIH;AACJ,GATD;AAUH,CAXM;;AAaP,MAAMI,gBAAgB,GAAIZ,GAAD,IAAS;AAC9B,MAAGA,GAAG,GAAG,IAAT,EAAc;AACV,WAAO,aAAP;AACH,GAFD,MAEO,IAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,IAA1B,EAAgC;AACnC,WAAO,eAAP;AACH,GAFM,MAEA,IAAGA,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,IAAvB,EAA6B;AAChC,WAAO,YAAP;AACH,GAFM,MAEA,IAAIA,GAAG,IAAI,EAAX,EAAe;AAClB,WAAO,OAAP;AACH;AACJ,CAVD;;AAWA,OAAO,MAAMa,gBAAgB,GAAG,MAAM;AAClC,SAAO,OAAOV,QAAP,EAAgBC,QAAhB,KAA6B;AAAA,2BACNA,QAAQ,GAAGU,IADL;AAAA,UACzBd,GADyB,kBACzBA,GADyB;AAAA,UACrBC,MADqB,kBACrBA,MADqB;AAAA,UACdC,IADc,kBACdA,IADc;AAEhC,UAAMI,QAAQ,GAAG,MAAMb,cAAc,CAACiB,GAAf,CAAmB,WAAnB,CAAvB;AACA,UAAMK,OAAO,GAAGH,gBAAgB,CAACZ,GAAD,CAAhC;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACE,IAAT,CAAcP,MAAd,EAAsBc,OAAtB,CAAZ;AACH,GALD;AAMH,CAPM","sourcesContent":["import fitnessService from '../services/FitnessService';\n\nexport const signIn = (userId) => {\n    return {\n        type : 'SIGN_IN',\n        payload : userId\n    } \n}\n\nexport const signOut = () => {\n    return {\n        type : 'SIGN_OUT'\n    } \n}\n\nexport const PersistBMIData = (bmi,gender,goal) => {\n   return async (dispatch,getState) => {\n        const {userId} = getState().auth;\n        const response = await fitnessService.post('/users',{bmi,userId,gender,goal});\n        dispatch({\n            type : 'PERSIST_BMI',\n            payload : response.data\n        });\n   }\n}\n\nexport const FetchBMIData = () => {\n    return async (dispatch,getState) => {\n        const {userId} = getState().auth;\n        const response = await fitnessService.get(`/users?userId=${userId}`);\n        if(response.data.length){\n            dispatch({\n                type : 'FETCH_BMI',\n                payload : response.data\n            });\n        }\n    }\n}\n\nconst calculateObesity = (bmi) => {\n    if(bmi < 18.5){\n        return 'underweight';\n    } else if (bmi >= 18.5 && bmi <= 24.9) {\n        return 'healthyweight';\n    } else if(bmi >= 25 && bmi <= 29.9) {\n        return 'overweight';\n    } else if (bmi >= 30) {\n        return 'obese';\n    }\n}\nexport const FetchWorkoutData = () => {\n    return async (dispatch,getState) => {\n        const {bmi,gender,goal} = getState().user;\n        const response = await fitnessService.get('/workouts');\n        const obesity = calculateObesity(bmi);\n        console.log(response.data[gender][obesity]);\n    }\n}"]},"metadata":{},"sourceType":"module"}